CREATE TABLE ks.user_type(
    cod VARCHAR(5) NOT NULL,
    name VARCHAR(70) NOT NULL
);
ALTER TABLE ks.user_type ADD CONSTRAINT pk_user_type PRIMARY KEY(cod);

CREATE TABLE ks.users(
    uuid VARCHAR(40) DEFAULT gen_random_uuid() NOT NULL,
    name VARCHAR(300) NOT NULL,
    login VARCHAR(100) NOT NULL,
    password VARCHAR(200) NOT NULL,
    state smallint DEFAULT 1 NOT NULL,
    type VARCHAR(5) NOT NULL
);
ALTER TABLE ks.users ADD CONSTRAINT pk_users PRIMARY KEY(uuid);

CREATE TABLE ks.demand_state(
    cod VARCHAR(5) NOT NULL,
    name VARCHAR(70) NOT NULL
);
ALTER TABLE ks.demand_state ADD CONSTRAINT pk_demand_state PRIMARY KEY(cod);

CREATE TABLE ks.demand(
    uuid VARCHAR(40) DEFAULT gen_random_uuid() NOT NULL,
    warp VARCHAR(70),
    weft_quantity smallint,
    date_created TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    date_closed TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    user_create VARCHAR(40) NOT NULL,
    user_close VARCHAR(40) NOT NULL,
    demand_state VARCHAR(5) NOT NULL,
    error_detail VARCHAR(5) NOT NULL,
    loom VARCHAR(40) NOT NULL
);
ALTER TABLE ks.demand ADD CONSTRAINT pk_demand PRIMARY KEY(uuid);

CREATE TABLE ks.render_type(
    cod VARCHAR(5) NOT NULL,
    name VARCHAR(20) NOT NULL
);
ALTER TABLE ks.render_type ADD CONSTRAINT pk_render_type PRIMARY KEY(cod);

CREATE TABLE ks.error_type(
    cod VARCHAR(5) NOT NULL,
    name VARCHAR(70) NOT NULL,
    render_type VARCHAR(5) NOT NULL
);
ALTER TABLE ks.error_type ADD CONSTRAINT pk_error_type PRIMARY KEY(cod);

CREATE TABLE ks.error_detail(
    cod VARCHAR(5) NOT NULL,
    name VARCHAR(70) NOT NULL,
    type VARCHAR(5) NOT NULL
);
ALTER TABLE ks.error_detail ADD CONSTRAINT pk_error_detail PRIMARY KEY(cod);

CREATE TABLE ks.loom(
    uuid VARCHAR(40) DEFAULT gen_random_uuid() NOT NULL,
    number VARCHAR(70) NOT NULL
);
ALTER TABLE ks.loom ADD CONSTRAINT pk_loom PRIMARY KEY(uuid);



-- Generated by https://github.com/VictorAndres20 code generator for database, NestJS, React